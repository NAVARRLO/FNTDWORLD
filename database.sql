-- Create user_profiles table
CREATE TABLE user_profiles (
    user_id BIGINT PRIMARY KEY,
    username TEXT UNIQUE NOT NULL,
    name TEXT,
    avatar TEXT,
    currency INTEGER DEFAULT 0,
    stats JSONB DEFAULT '{"totalSpins": 0, "itemsOwned": 0, "daysActive": 1, "tradeCount": 0}'::jsonb,
    banned BOOLEAN DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()),
    last_login TIMESTAMP WITH TIME ZONE
);

-- Create items table
CREATE TABLE items (
    id TEXT PRIMARY KEY,
    name TEXT NOT NULL,
    rarity TEXT NOT NULL,
    icon TEXT NOT NULL,
    value INTEGER NOT NULL,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now())
);

-- Create user_inventory table
CREATE TABLE user_inventory (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES user_profiles(user_id),
    item_id TEXT REFERENCES items(id),
    obtained_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()),
    UNIQUE(user_id, item_id)
);

-- Create admins table
CREATE TABLE admins (
    username TEXT PRIMARY KEY REFERENCES user_profiles(username),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now())
);

-- Create policies
ALTER TABLE user_profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE items ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_inventory ENABLE ROW LEVEL SECURITY;
ALTER TABLE admins ENABLE ROW LEVEL SECURITY;

-- User profiles policies
CREATE POLICY "Users can view their own profile"
    ON user_profiles FOR SELECT
    USING (auth.uid()::text = user_id::text);

-- Временно разрешить просмотр всем аутентифицированным
CREATE POLICY "Admins can view all profiles"
    ON user_profiles FOR SELECT
    TO authenticated
    USING (true);

-- Items policies
CREATE POLICY "Anyone can view items"
    ON items FOR SELECT
    TO authenticated
    USING (true);

-- Временно разрешить изменение всем аутентифицированным
CREATE POLICY "Only admins can modify items"
    ON items
    TO authenticated
    USING (true);

-- Inventory policies
CREATE POLICY "Users can view their own inventory"
    ON user_inventory FOR SELECT
    USING (auth.uid()::text = user_id::text);

-- Временно разрешить просмотр всем аутентифицированным
CREATE POLICY "Admins can view all inventories"
    ON user_inventory FOR SELECT
    TO authenticated
    USING (true);

-- Function to add currency to user
CREATE OR REPLACE FUNCTION add_currency_to_user(target_username TEXT, amount INTEGER)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    -- Здесь тоже нужна доработка для проверки админа через user_id или отдельную таблицу
    UPDATE user_profiles 
    SET currency = currency + amount
    WHERE username = target_username;
END;
$$;